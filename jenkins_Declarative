pipeline {
    agent {
        docker {
            image 'maven:3.8.1-jdk-11' // Use the appropriate Maven Docker image
            args '-v /root/.m2:/root/.m2' // Cache Maven dependencies
        }
    }
    environment {
        MAVEN_OPTS = '-Dmaven.repo.local=/root/.m2/repository'
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Akshay-2495/DemoEclipsProject.git'
            }
        }
        stage('Build') {
            steps {
                script {
                    // Run Maven build and specify the location of the pom.xml file
                    sh 'mvn -f WebEcomproject/pom.xml clean install'
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    // Run Maven tests
                    sh 'mvn -f C:\Users\ASUS\git\repository2\WebEcomproject\pom.xml'
                }
            }
        }
        stage('Generate Allure Report') {
            steps {
                script {
                    // Run Allure report generation
                    sh 'allure generate --clean'
                }
            }
        }
        stage('Serve Allure Report') {
            steps {
                script {
                    // Serve Allure report
                    sh 'allure serve'
                }
            }
        }
    }
    post {
        always {
            archiveArtifacts artifacts: '**/target/*.jar', allowEmptyArchive: true
            junit '**/target/surefire-reports/*.xml'
        }
    }
}
